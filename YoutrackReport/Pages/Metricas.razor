
@page "/Metricas"
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using YoutrackReport.DTOs
@using YoutrackReport.Servicios.Contrato
@using System.Collections.Generic
@using YoutrackReport.Servicios.Impllementacion

@inject ObtieneMetricas ObtieneMetricasService


<!-- Archivo CSS para estilos de las cartas -->
<link rel="stylesheet" href="~/css/metricasStyle.css" />

<!-- Referencia AdminLTE-->
@* <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/css/adminlte.min.css"> *@


<!-- INICIO HTML -->

<div class="container text-center">
    <div class="row">
        <div class="col-md-12" style="padding-bottom: 10px">
            <h2>Métricas</h2>
        </div>
    </div>

    @if (metricas != null)
    {
        <div class="row">
            <div class="col-md-12">

                <div class="card text-dark bg-light mb-3">

                    <div class="card-body">

                        <div class="row">
                            <div class="col-md">
                                <div class="card text-dark bg-info mb-3 estado-box">
                                    <div class="card-body">
                                        <h5 class="card-title">Total de proyectos</h5>
                                        <p class="card-text">@totalProyectos</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="card text-dark bg-warning mb-3 estado-box">
                                    <div class="card-body">
                                        <h5 class="card-title">En curso</h5>
                                        <p class="card-text">@totalProyectosEnCurso</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="card text-white bg-success mb-3 estado-box">
                                    <div class="card-body">
                                        <h5 class="card-title">Terminado</h5>
                                        <p class="card-text">@resultado.terminado</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>


            </div>
        </div>

        <div class="row" style="padding-top: 50px">
            <div class="col-12">
                <!-- <div class="col-header">Proyectos por jefe de proyectos</div> -->
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Jefe de proyectos</th>
                            <th scope="col">Total</th>
                            <th scope="col">Terminados</th>
                            <th scope="col">En curso</th>
                            <th scope="col">Desarrollo</th>
                            <th scope="col">Detenido</th>
                            <th scope="col">Por iniciar</th>
                            <th scope="col">Atrasados</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var jefeProyecto in lista)
                        {
                            <tr>
                                <td>@jefeProyecto.jefeProyecto</td>
                                <td>@jefeProyecto.totalProyectos</td>
                                <td>@jefeProyecto.terminadoJP </td>
                                <td>@jefeProyecto.enCursoJP</td>
                                <td>@jefeProyecto.desarrolloJP</td>
                                <td>@jefeProyecto.detenidoJP</td>
                                <td>@jefeProyecto.porIniciarJP</td>
                                @* <td>@jefeProyecto.atrasosReal</td> *@
                                @* <td>@jefeProyecto.atrasosQA</td> *@
                                @* <td>@jefeProyecto.atrasosDesa</td> *@
                                <td>@jefeProyecto.totalAtrasos</td>
                            </tr>
                        }
                     
                    </tbody>
                </table>
            </div>
        </div>

    }
    else
    {
        <div class="spinner-grow text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    }

</div>

<!-- FIN HTML -->


@code {
    private List<FieldsDTO> metricas;
    public int totalProyectos = 0;
    public int totalProyectosEnCurso = 0;
    dynamic resultado = null;
    private List<ResultadoJsonJP> lista = new();
    dynamic resultadoJP = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            metricas = await ObtieneMetricasService.ObtenerDatosComunes("https://prosysspa.youtrack.cloud/api/issues?fields=customFields(name,value(name))");

            if (metricas != null)
            {
                totalProyectos = metricas.Count;

                 var metricasKPI = ObtieneMetricasService.CalcularTotales(metricas);



                await foreach (var jsonResultadoJP in ObtieneMetricasService.CalcularTotalesPorJP(metricas))
                {

                    resultadoJP = JsonConvert.DeserializeObject<ResultadoJsonJP>(jsonResultadoJP);
                    lista.Add(resultadoJP);
                }

            }
        }
        catch (Exception ex)
        {
            // Manejar la excepción según tus necesidades (por ejemplo, mostrar un mensaje de error)
            Console.WriteLine($"Error al obtener métricas: {ex.Message}");
        }
    }

    //Clase que contiene los valores que retorna el método CalcularTotales()
    public class ResultadoJson
    {
        public int enCurso { get; set; }
        public int terminado { get; set; }
    }

    public class ResultadoJsonJP
    {
        public string jefeProyecto { get; set; }
        public int totalProyectos { get; set; }
        public int totalAtrasos { get; set; }
        public int enCursoJP { get; set; }
        public int terminadoJP { get; set; }
        public int desarrolloJP { get; set; }
        public int detenidoJP { get; set; }
        public int porIniciarJP { get; set; }
        public int atrasosDesa { get; set; }
        public int atrasosReal { get; set; }
        public int atrasosQA { get; set; }
    }


}
